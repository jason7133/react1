{"version":3,"sources":["components/TodoTemplate.js","components/TodoHead.js","components/TodoItem.js","components/TodoList.js","components/TodoCreate.js","App.js","reportWebVitals.js","index.js"],"names":["TodoTemplateBlock","styled","div","TodoTemplate","children","TodoHeadBlock","TodoHead","className","Remove","TodoItemBlock","CheckCircle","props","done","css","Text","TodoItem","id","text","TodoListBlock","TodoList","CircleButton","button","open","InsertFormPositioner","InsertForm","form","Input","input","TodoCreate","useState","setOpen","autoFocus","placeholder","onClick","GlobalStyle","createGlobalStyle","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2NAEMA,EAAoBC,IAAOC,IAAV,qSAqBRC,I,EAAAA,EAJf,YAAqC,IAAbC,EAAY,EAAZA,SACtB,OAAO,cAACJ,EAAD,UAAoBI,KClBvBC,EAAgBJ,IAAOC,IAAV,uaAkCJI,I,YAAAA,EAVf,WACE,OACE,eAACD,EAAD,WACE,8DACA,qBAAKE,UAAU,MAAf,gCACA,qBAAKA,UAAU,aAAf,oD,OC5BAC,EAASP,IAAOC,IAAV,sNAaNO,EAAgBR,IAAOC,IAAV,wJAKbM,GAMAE,EAAcT,IAAOC,IAAV,+PAWb,SAACS,GAAD,OACAA,EAAMC,MACNC,YADA,4FAOEC,EAAOb,IAAOC,IAAV,sFAIN,SAACS,GAAD,OACAA,EAAMC,MACNC,YADA,0DAkBWE,I,EAAAA,EAZf,YAAsC,EAAlBC,GAAmB,IAAfJ,EAAc,EAAdA,KAAMK,EAAQ,EAARA,KAC5B,OACE,eAACR,EAAD,WACE,cAACC,EAAD,CAAaE,KAAMA,EAAnB,SAA0BA,GAAQ,cAAC,IAAD,MAClC,cAACE,EAAD,CAAMF,KAAMA,EAAZ,SAAmBK,IACnB,cAACT,EAAD,UACE,cAAC,IAAD,UC5DFU,EAAgBjB,IAAOC,IAAV,qIAkBJiB,I,UAAAA,EAVf,WACE,OACE,eAACD,EAAD,WACE,cAAC,EAAD,CAAUD,KAAK,oDAAYL,MAAM,IACjC,cAAC,EAAD,CAAUK,KAAK,oDAAYL,MAAM,IACjC,cAAC,EAAD,CAAUK,KAAK,oDAAYL,MAAM,Q,QCZjCQ,EAAenB,IAAOoB,OAAV,mkBA8Bd,SAACV,GAAD,OACAA,EAAMW,MACNT,YADA,sOAaEU,EAAuBtB,IAAOC,IAAV,6FAOpBsB,EAAavB,IAAOwB,KAAV,+PAYVC,EAAQzB,IAAO0B,MAAV,oLA8BIC,I,EAAAA,EApBf,WACE,MAAwBC,oBAAS,GAAjC,mBAAOP,EAAP,KAAaQ,EAAb,KAGA,OACE,qCACGR,GACC,cAACC,EAAD,UACE,cAACC,EAAD,UACE,cAACE,EAAD,CAAOK,WAAS,EAACC,YAAY,sFAInC,cAACZ,EAAD,CAAca,QAXD,kBAAMH,GAASR,IAWKA,KAAMA,EAAvC,SACE,cAAC,IAAD,UCpFFY,EAAcC,YAAH,qEAmBFC,MAbf,WACE,OACE,qCACE,cAACF,EAAD,IACA,eAAC,EAAD,WACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,WCROG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.76d67c3b.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nconst TodoTemplateBlock = styled.div`\r\n  width: 512px;\r\n  height: 768px;\r\n\r\n  position: relative;\r\n  background: white;\r\n  border-radius: 16px;\r\n  box-shadow: 0 0 8px 0 rgba(0, 0, 0, 0.04);\r\n\r\n  margin: 0 auto;\r\n\r\n  margin-top: 96px;\r\n  margin-bottom: 32px;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nfunction TodoTemplate({ children }) {\r\n  return <TodoTemplateBlock>{children}</TodoTemplateBlock>;\r\n}\r\n\r\nexport default TodoTemplate;\r\n","import styled from \"styled-components\";\r\n\r\nconst TodoHeadBlock = styled.div`\r\n  padding-top: 48px;\r\n  padding-left: 32px;\r\n  padding-right: 32px;\r\n  padding-bottom: 24px;\r\n  border-bottom: 1px solid #e9ecef;\r\n  h1 {\r\n    margin: 0;\r\n    font-size: 36px;\r\n    color: #343a40;\r\n  }\r\n  .day {\r\n    margin-top: 4px;\r\n    color: #868e96;\r\n    font-size: 21px;\r\n  }\r\n  .tasks-left {\r\n    color: #20c997;\r\n    font-size: 18px;\r\n    margin-top: 40px;\r\n    font-weight: bold;\r\n  }\r\n`;\r\n\r\nfunction TodoHead() {\r\n  return (\r\n    <TodoHeadBlock>\r\n      <h1>2021년 07월 07일</h1>\r\n      <div className=\"day\">수요일</div>\r\n      <div className=\"tasks-left\">할 일 2개 남음</div>\r\n    </TodoHeadBlock>\r\n  );\r\n}\r\n\r\nexport default TodoHead;\r\n","import styled, { css } from \"styled-components\";\r\nimport { MdDone, MdDelete } from \"react-icons/md\";\r\n\r\nconst Remove = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: #dee2e6;\r\n  font-size: 24px;\r\n  cursor: pointer;\r\n  &:hover {\r\n    color: #ff6b6b;\r\n  }\r\n  display: none;\r\n`;\r\n\r\nconst TodoItemBlock = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  padding-top: 12px;\r\n  &:hover {\r\n    ${Remove} {\r\n      display: initial;\r\n    }\r\n  }\r\n`;\r\n\r\nconst CheckCircle = styled.div`\r\n  width: 32px;\r\n  height: 32px;\r\n  border-radius: 16px;\r\n  border: 1px solid #ced4da;\r\n  font-size: 24px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-right: 20px;\r\n  cursor: pointer;\r\n  ${(props) =>\r\n    props.done &&\r\n    css`\r\n      border: 1px solid #38d9a9;\r\n      color: #38d9a9;\r\n    `}\r\n`;\r\n\r\nconst Text = styled.div`\r\n  flex: 1;\r\n  font-size: 21px;\r\n  color: #495057;\r\n  ${(props) =>\r\n    props.done &&\r\n    css`\r\n      color: #ced4da;\r\n    `}\r\n`;\r\n\r\nfunction TodoItem({ id, done, text }) {\r\n  return (\r\n    <TodoItemBlock>\r\n      <CheckCircle done={done}>{done && <MdDone />}</CheckCircle>\r\n      <Text done={done}>{text}</Text>\r\n      <Remove>\r\n        <MdDelete />\r\n      </Remove>\r\n    </TodoItemBlock>\r\n  );\r\n}\r\n\r\nexport default TodoItem;\r\n","import styled from \"styled-components\";\r\nimport TodoItem from \"./TodoItem\";\r\n\r\nconst TodoListBlock = styled.div`\r\n  flex: 1;\r\n  padding: 20px 32px;\r\n  padding-bottom: 48px;\r\n  overflow-y: auto;\r\n  // background: gray;\r\n`;\r\n\r\nfunction TodoList() {\r\n  return (\r\n    <TodoListBlock>\r\n      <TodoItem text=\"프로젝트 생성하기\" done={true}></TodoItem>\r\n      <TodoItem text=\"프로젝트 생성하기\" done={false}></TodoItem>\r\n      <TodoItem text=\"프로젝트 생성하기\" done={true}></TodoItem>\r\n    </TodoListBlock>\r\n  );\r\n}\r\n\r\nexport default TodoList;\r\n","import React, { useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { MdAdd } from \"react-icons/md\";\r\n\r\nconst CircleButton = styled.button`\r\n  background: #38d9a9;\r\n  &:hover {\r\n    background: #63e6be;\r\n  }\r\n  &:active {\r\n    background: #20c997;\r\n  }\r\n\r\n  z-index: 5;\r\n  cursor: pointer;\r\n  width: 80px;\r\n  height: 80px;\r\n  display: block;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 60px;\r\n  position: absolute;\r\n  left: 50%;\r\n  bottom: 0%;\r\n  transform: translate(-50%, 50%);\r\n  color: white;\r\n  border-radius: 50%;\r\n  border: none;\r\n  outline: none;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  transition: 0.125s all ease-in;\r\n  ${(props) =>\r\n    props.open &&\r\n    css`\r\n      background: #ff6b6b;\r\n      &:hover {\r\n        background: #ff8787;\r\n      }\r\n      &:active {\r\n        background: #fa5252;\r\n      }\r\n      transform: translate(-50%, 50%) rotate(45deg);\r\n    `}\r\n`;\r\n\r\nconst InsertFormPositioner = styled.div`\r\n  width: 100%;\r\n  bottom: 0;\r\n  left: 0;\r\n  position: absolute;\r\n`;\r\n\r\nconst InsertForm = styled.form`\r\n  background: #f8f9fa;\r\n  padding-left: 32px;\r\n  padding-top: 32px;\r\n  padding-right: 32px;\r\n  padding-bottom: 72px;\r\n\r\n  border-bottom-left-radius: 16px;\r\n  border-bottom-right-radius: 16px;\r\n  border-top: 1px solid #e9ecef;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  padding: 12px;\r\n  border-radius: 4px;\r\n  border: 1px solid #dee2e6;\r\n  width: 100%;\r\n  outline: none;\r\n  font-size: 18px;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nfunction TodoCreate() {\r\n  const [open, setOpen] = useState(false);\r\n  const onToggle = () => setOpen(!open);\r\n\r\n  return (\r\n    <>\r\n      {open && (\r\n        <InsertFormPositioner>\r\n          <InsertForm>\r\n            <Input autoFocus placeholder=\"할 일을 입력 후, Enter를 누르세요\" />\r\n          </InsertForm>\r\n        </InsertFormPositioner>\r\n      )}\r\n      <CircleButton onClick={onToggle} open={open}>\r\n        <MdAdd />\r\n      </CircleButton>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TodoCreate;\r\n","import \"./App.css\";\nimport { createGlobalStyle } from \"styled-components\";\nimport TodoTemplate from \"./components/TodoTemplate\";\nimport TodoHead from \"./components/TodoHead\";\nimport TodoList from \"./components/TodoList\";\nimport TodoCreate from \"./components/TodoCreate\";\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    background: #e9ecef;\n  }\n`;\n\nfunction App() {\n  return (\n    <>\n      <GlobalStyle />\n      <TodoTemplate>\n        <TodoHead></TodoHead>\n        <TodoList></TodoList>\n        <TodoCreate></TodoCreate>\n      </TodoTemplate>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}